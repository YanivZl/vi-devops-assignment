name: service2 CI workflow 

on:
  push:
    branches: [ "master" ]
    paths:
    - packages/service2/**
  pull_request:
    branches: [ "master" ]
    paths:
    - packages/service2/**
  workflow_dispatch:

env:     
  ECR_REPOSITORY: vi-yanivzl-service2
  DOCKERFILE_PATH: ./packages/service2/

permissions:
    id-token: write   # This is required for requesting the JWT
    contents: read    # This is required for actions/checkout


jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ vars.IAM_OIDC_ROLE }}
        role-session-name: samplerolesession
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.run_id }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $DOCKERFILE_PATH
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      id: install

    - name: Configure kubectl
      run: aws eks --region ${{ vars.AWS_REGION }} update-kubeconfig --name vi-yanivzl-eks

    - name: Helm upgrade
      working-directory: ./4-charts
      env:
        IMAGE_TAG: ${{ github.run_id }}
        RELEASE_NAME: service2
        HELM_CHART_PATH: ./service2
        RELEASE_NAMESPACE: default
      run: |
        helm upgrade --install $RELEASE_NAME $HELM_CHART_PATH \
          --namespace RELEASE_NAMESPACE \
          --set image.tag=$IMAGE_TAG \
          --create-namespace